name: Foodgram CI/CD
on: [push]

jobs:
  build_and_push_backend:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v5
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_and_push_frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    needs: build_and_push_backend
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/build-push-action@v5
        with:
          context: frontend
          file: frontend/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    needs: build_and_push_frontend
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -e
            cd /home/${{ secrets.USER }}/foodgram/infra

            # обновим репозиторий, если есть .git
            if [ -d ../.git ]; then
              cd ..
              git pull || true
              cd infra
            fi

            # прод-стек из Docker Hub
            sudo docker-compose -f docker-compose.production.yml down
            sudo docker-compose -f docker-compose.production.yml pull
            sudo docker-compose -f docker-compose.production.yml up -d --build

            # миграции/статика/ингредиенты
            sudo docker-compose -f docker-compose.production.yml exec -T backend python manage.py migrate
            sudo docker-compose -f docker-compose.production.yml exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose -f docker-compose.production.yml exec -T backend python manage.py load_ingredients

  notify:
    name: Telegram Notify
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Foodgram: деплой успешно выполнен ✅"
