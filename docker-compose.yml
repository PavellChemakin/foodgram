version: '2.4'

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$$POSTGRES_USER", "-d", "$$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s
    networks: [foodgram_net]
    restart: always

  backend:
    image: pavellchemakin/foodgram_backend:latest
    env_file: .env
    volumes:
      # Mount the shared static volume at Django's STATIC_ROOT
      - static:/app/backend/static
      # Mount the shared media volume at Django's MEDIA_ROOT
      - media:/app/backend/media
    depends_on:
      db:
        condition: service_healthy
    expose: ["8000"]
    networks: [foodgram_net]
    restart: always

  frontend:
    image: pavellchemakin/foodgram_frontend:latest
    env_file: .env
    volumes:
      # Mount the shared static volume into /static so the build artifacts can be served
      - static:/static
    expose: ["9000"]
    networks: [foodgram_net]
    restart: always

  nginx:
    image: nginx:1.25-alpine
    env_file: .env
    volumes:
      # Mount our custom nginx configuration
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Make static files and media available to nginx
      - static:/var/html/static
      - media:/var/html/media
      # Optionally expose API documentation (if present in docs/)
      - ./docs:/usr/share/nginx/html/api/docs:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks: [foodgram_net]
    restart: always

volumes:
  pg_data:
  static:
  media:

networks:
  foodgram_net:
